global:
  image:
    repository: "cp.icr.io/cp/ibm-b2bi/b2bi"
    tag: "6.2.0.0"
    pullPolicy: IfNotPresent
    pullSecret: "ibm-entitlement-key"
  licenseType: "non-prod"
  license: true
  networkPolicies:
    ingress:
      enabled: true
      customPolicies:
      - name: "custom-ingress"
        fromSelectors:
        # - namespaceSelector:
        #     matchLabels:
        #       name: my-source-namespace
        #   podSelector:
        #     matchLabels:
        #       app.kubernetes.io/name: my-consumer-pod
        # - podSelector:
        #     matchLabels:
        #       role: frontend
        # - ipBlock:
        #     cidr: 35.231.164.129/32 # database
        # - ipBlock:
        #     cidr: 169.63.104.235/32 # cp.icr.io
            # except:
            # - <IP Address>/<block size>
        ports:
        - protocol: TCP
          port: 1433
          endPort: 1433
    egress:
      enabled: true
      customPolicies:
      - name: "custom-egress"
        toSelectors:
      #  - namespaceSelector:
      #      matchLabels:
      #        name: my-source-namespace
      #    podSelector:
      #      matchLabels:
      #        app.kubernetes.io/name: my-consumer-pod
      #  - podSelector:
      #      matchLabels:
      #        role: frontend
        # - ipBlock:
        #     cidr: 35.231.164.129/32 # database
        # - ipBlock:
        #     cidr: 169.63.104.235/32 # cp.icr.io
      #      except:
      #      - <IP Address>/<block size>
        ports:
          - protocol: TCP
            port: 1433
            endPort: 1433
ingress:
  enabled: false
# documentService:
#   license: true
#   enabled: true
#   sslEnabled: false
  # useGrpc: false
  # image:
  #   pullSecret: ibm-entitlement-key
resourcesInit:
  enabled: true
  image:
    repository: "cp.icr.io/cp/ibm-b2bi/b2bi-resources"
    tag: "6.2.0.0"
    digest: sha256:3d8c6afa6215915c99aa4a65fcb323ded326872f94a720117b89caef36ed9c88
    pullPolicy: "IfNotPresent"
  command:
appResourcesPVC:
  enabled: false
  storageClassName: ""
  size: 500Mi
  preDefinedResourcePVCName: resources
appLogsPVC:
  name: logs
  enabled: false
  storageClassName: ""
  selector:
    label: "intent"
    value: "logs"
  accessMode: ReadWriteMany
  size: 500Mi
appDocumentsPVC:
  enabled: false
  name: documents
  storageClassName: ""
  selector:
    label: "intent"
    value: "documents"
  accessMode: ReadWriteMany
  size: 1000Mi
dataSetup:
  enabled: true
  upgrade: false
  image:
    pullSecret: ibm-entitlement-key
#env:
#  upgradeCompatibilityVerified: true
logs:
  # true if user wish to redirect the application logs to console else false. If provided value is true , then application logs will reside inside containers. No volume mapping will be used.
   enableAppLogOnConsole: true
setupCfg:
  basePort: 30000
  licenseAcceptEnableSfg: true
  licenseAcceptEnableEbics: false
  licenseAcceptEnableFinancialServices: false
  systemPassphraseSecret: b2b-system-passphrase-secret
  enableFipsMode: false
  nistComplianceMode: "off"
  # Provide the DB attributes
  dbVendor: DB2
  dbHost: 172.30.135.106
  dbPort: 50000
  dbData: BLUDB
  dbDrivers: db2jcc4.jar
  dbCreateSchema: true
  oracleUseServiceName: false
  # Values can be either true or false
  usessl: false
  # Required when usessl is true
  dbTruststore:
  dbKeystore:
  # Name of DB secret
  dbSecret: b2b-db-secret
  #Provide the admin email address
  adminEmailAddress: thierry.musibon@ibm.com # change
  # Provide the SMTP host details
  smtpHost: localhost
  useSslForRmi: false
asi:
  replicaCount: 1
  env:
    #upgradeCompatibilityVerified: true
    jvmOptions:
    #Refer to global env.extraEnvs for sample values
    extraEnvs:
      - name: GNUPGHOME
        value: /ibm/resources/pgp/.gnupg/
  frontendService:
    type: LoadBalancer
    ports:
      http:
        name: http
        port: 35000
        targetPort: http
        protocol: TCP
      https:
        name: https
        port: 35001
        targetPort: https
        protocol: TCP
      soa:
        name: soa
        port: 35002
        targetPort: soa
        protocol: TCP
      soassl:
        name: soassl
        port: 35003
        targetPort: soassl
        protocol: TCP
      restHttpAdapter:
        name: rest-adapter
        port: 35007
        targetPort: rest-adapter
        protocol: TCP
    extraPorts: []
    loadBalancerIP:
    annotations: {}
  backendService:
    type: LoadBalancer
    ports:
      - name: asi-ftp-1
        port: 30032
        targetPort: 30032
        nodePort: 32021
        protocol: TCP
      - name: asi-sftp-1
        port: 30039
        targetPort: 30039
        nodePort: 32022
        protocol: TCP
    portRanges:
      - name: adapters
        portRange: 30350-30400
        targetPortRange: 30350-30400
        nodePortRange: 30350-30400
        protocol: TCP
    loadBalancerIP:
    annotations: {}
  livenessProbe:
    initialDelaySeconds: 300
    timeoutSeconds: 120
    periodSeconds: 60
  readinessProbe:
    initialDelaySeconds: 300
    timeoutSeconds: 60
    periodSeconds: 60
  internalAccess:
    enableHttps: false
    httpsPort:
  externalAccess:
    protocol: http
    address:
    port:
  ingress:
    internal:
      host:
      tls:
        enabled: false
        secretName: ""
      extraPaths: []
      #  - routePrefix: "hello"
      #    path: "/hello"
      #    servicePort: "my-http"
      #    enableHttps: false
    external:
      host:
      tls:
        enabled: false
        secretName: ""
      extraPaths: []
      #  - routePrefix: "hello"
      #    path: "/hello"
      #    servicePort: "my-http"
      #    enableHttps: false
      #    access: "internal"
ac:
  replicaCount: 0
api:
  replicaCount: 1
  # extraSecrets:
  #   - mountAsVolume: false
  frontendService:
    type: NodePort
  ports:
    http:
      name: http
      port: 35005
      targetPort: http
      nodePort: 30005
      protocol: TCP
    https:
      name: https
      port: 35006
      targetPort: https
      nodePort: 30006
      protocol: TCP
  limits:
    cpu: 4000m
    memory: 4Gi
  requests:
    cpu: 1000m
    memory: 2Gi
  internalAccess:
    enableHttps: false
  ingress:
    internal:
      host:
      tls:
        enabled: false
dashboard:
  enabled: true
purge:
  enabled: false
